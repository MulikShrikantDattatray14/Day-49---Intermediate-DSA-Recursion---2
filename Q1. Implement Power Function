Q1. Implement Power Function

Problem Description
Implement pow(A, B) % C.
In other words, given A, B and C, Find (AB % C).

Note: The remainders on division cannot be negative. In other words, make sure the answer you return is non-negative.



Problem Constraints
-109 <= A <= 10 power 9
0 <= B <= 10 power 9
1 <= C <= 10 power 9


Input Format
Given three integers A, B, C.


Output Format
Return an integer.


Example Input
A = 2, B = 3, C = 3


Example Output
2


Example Explanation
23 % 3 = 8 % 3 = 2


CODE (java):

public class Solution {
    public int pow(int A, int B, int C) {

        if(A == 0)
        return 0;
       
        if(B == 0)
        return 1;

        long ans = pow(A,B/2,C);
        if(B%2 == 0)
        return (int) ((ans*ans) % C); // If B is even then answer cannot be negative
        else
        ans = ((ans*ans % C) * (A %C)) % C;
        return (int) ((ans+C) % C); // If B is odd answer can be negative, convert it to positive using (A-B) % M
        
        
    }
}

CODE (Javascript):

let A= parseInt(readLine());
let B=parseInt(readLine());
let C=parseInt(readLine());
function pow(A, B, C) {
    if (B == 0) return 1 % C;
        let ans = 1n, base = BigInt(A), c1 = BigInt(C);

        while (B > 0) {

            if (B % 2 == 1) {
                ans = (ans * base) % c1;
                B--;
            }
            else {

                base = (base * base) % c1;
                B /= 2;
            }

        }
        if (ans < 0) ans = (ans + c1) % c1;
        return Number(ans);
}
let ans = pow(A, B, C);
console.log(ans)